import PostgresSchemaTable from '../../lib/schema/PostgresSchemaTable';

describe('MysqlSchemaTable', () => {
  let table:PostgresSchemaTable;

  beforeEach(() => {
    table = new PostgresSchemaTable('users')
  })

  describe('boolean', () => {
    it('boolean', () => {
      table.boolean('is_active')
      const sql = table.toCreateStatement()
      const expected = 'CREATE TABLE "users" (\n  "is_active" BOOLEAN NOT NULL\n)'
      expect(sql).toEqual(expected)
    })
    it('boolean with default value', () => {
      table.boolean('is_active', true)
      const sql = table.toCreateStatement()
      const expected = 'CREATE TABLE "users" (\n  "is_active" BOOLEAN NOT NULL DEFAULT true\n)'
      expect(sql).toEqual(expected)
    })
  })


  describe('modifiers', () => {
    it('autoIncrement', () => {
      table.integer('id', 255).autoIncrement().primary()
      const sql = table.toCreateStatement()
      const expected = 'CREATE TABLE "users" (\n  "id" INT(255) NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY\n)'
      expect(sql).toEqual(expected)
    })
  })

});
